# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: TodayHouse CI CD With Github Actions & CodeDeploy

on:
  pull_request_target:
    branches:
      - 'develop'

  push:
    branches:
      - 'develop'
      - 'cicd/*'

  pull_request:
    branches:
      - 'develop'
      - 'cicd/*'
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Submodule init
        run: git submodule init

      - name: setup-git-credentials
        uses: de-vri-es/setup-git-credentials@v2.0.8
        with:
          credentials: ${{secrets.GIT_CREDENTIALS}}
      - name: Submodule from remote
        run: git submodule update --remote --merge


      - name: Build with Gradle
        run: ./gradlew clean build -x test
        # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir -p deploy/scripts

      # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/
      # appspec.yml Copy
      - name: Copy appspec
        run: cp ./appspec.yml ./deploy/

      # script file Copy
      - name: Copy shell
        run: cp ./scripts/* ./deploy/scripts/
      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./todayhouse_build.zip ./deploy

      # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp --region us-east-1 --acl private ./todayhouse_build.zip s3://todayhouse/

      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name todayhouse \
          --deployment-group-name todayhouse-cicd \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=todayhouse,bundleType=zip,key=todayhouse_build.zip \
          --region us-east-1
